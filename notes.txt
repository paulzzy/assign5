START

- Commit notes.txt

BASIC TESTING

- Create test directory and rudimentary script to validate that `randall`
outputs the correct number of bytes.

- Call test from Makefile

CODE SPLITTING

- I copy-pasted chunks of the code in randall.c into their appropriate files
(following the spec).

- Also, I put #include directives in the appropriate places.

- Besides #include, the only modifications I made were to remove `static` from
the functions that are used by other C files. Functions that were only used
within the same file were kept `static`.

ADDING OPTIONS

-i OPTION

- Modify Makefile to enable AddressSanitizer and Undefined Behavior Sanitizer

- Use the `getopt` function (see docs at
https://www.gnu.org/software/libc/manual/html_node/Using-Getopt.html) to
implement option parsing.

- I use a switch-case statement to modify the program's behavior based on the
user-supplied options.

- Implementing a wrapper around `mrand48_r` requires seeding in the
`mrand48_r_wrapper_init` function. Also, `mrand48_r` only returns 32-bit values,
so a bit of work was required to return 64-bit random values.

- To allow an arbitrary filename to be the random source, I had to add an extra
function `software_rand64_set_file` to set the filename since `initialize`
doesn't take arguments. Modifying `initialize` would change how every other `-i`
argument works, since I opted to just add an extra function.

-o OPTION

- I added `chunked_write`, a function that writes random data in chunks. It
accepts `rand64` as a function pointer. Chunks are written in a loop until
`nbytes` bytes (passed as an argument) are written. The actual writing is
delegated to `chunked_write`, which `malloc`s a buffer with capacity
`chunk_size` (passed as an argument). The buffer is filled with random data,
then written at once using `write`.

TIMING RESULTS

[classpzh@lnxsrv12 assign5]$ time ./randall 133562368 >/dev/null

real    0m3.367s
user    0m3.328s
sys     0m0.025s
[classpzh@lnxsrv12 assign5]$ time ./randall 133562368 | cat >/dev/null

real    0m3.684s
user    0m3.360s
sys     0m0.229s
[classpzh@lnxsrv12 assign5]$ time ./randall 133562368 >rand.data

real    0m3.446s
user    0m3.322s
sys     0m0.106s
